{% use "form_div_layout.html.twig" %}


{%- block form_start -%}
    <v-form>

   {{ parent() }}
{%- endblock form_start -%}


{%- block form_end -%}
    {{ parent() }}

    </v-form>
{%- endblock form_end -%}

{%- block form_row -%}
    {{- form_widget(form) -}}
{%- endblock form_row -%}

{%- block form_widget_simple -%}
    {%- set type = type|default('text') -%}
    {%- set password = type == 'password' -%}
    
    {% if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
            }) %}
        {%- else -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}

    {%- if type is not same as('hidden') -%}

        {% set type = textarea is defined ? 'textarea' : 'text-field' %}
        <v-{{ type }} type="{{ password ? 'password' : type }}" label="{{ label }}" value="{{ value }}" {{ block('widget_attributes') }}
                {%- if errors|length > 0 %} error  :error-messages="[{%- for error in errors -%}'{{ error.message|e('html_attr') }}'{%- endfor -%}]" {%- endif -%}
                {% if required %}class="required"{% endif %}
        ></v-{{ type }}>
    {%- else -%}
        <input type="{{ password ? 'password' : type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
    {%- endif -%}
{%- endblock form_widget_simple -%}

{% block widget_attributes -%}
    :id="'{{ id }}'" :name="'{{ full_name }}'"
    {{ block('attributes') }}
{%- endblock widget_attributes %}

{%- block collection_widget -%}
    <form-collection {{ allow_delete ? 'allow_delete' : ':allow_delete="false"' }} {{ allow_add ? 'allow_add' : ':allow_add="false"' }}>
        {% if form|length > 0 %}
            {% for item in form %}
                <template slot="items">
                    <span>
                        {{- form_row(item) -}}
                    </span>
                </template>
            {% endfor %}
        {% endif %}

        {% if prototype is defined %}
            <template slot="prototype" slot-scope="props">
                {{- form_row(prototype)|replace({
                    (prototype.vars.name): "' + props.index + '"
                })|raw -}}
            </template>
        {% endif %}
    </form-collection>
{%- endblock collection_widget -%}

{%- block choice_widget_expanded -%}
    <div {{ block('widget_container_attributes') }}>
        {{- form_label(form) -}}

        {%- if not multiple %}
            <v-radio-group value="{{ value }}" {{ block('widget_attributes') }}
                {%- if errors|length > 0 %} error  :error-messages="[{%- for error in errors -%}'{{ error.message|e('html_attr') }}'{%- endfor -%}]" {%- endif -%}
            >
        {% endif -%}
            {%- for child in form %}
                {{- form_widget(child) -}}
            {% endfor -%}

        {%- if not multiple %}</v-radio-group>{% endif -%}
    </div>
{%- endblock choice_widget_expanded -%}

{%- block radio_widget -%}
    {% set radio_type = switch is same as(true) ? 'switch' : 'radio' %}
    <v-{{ radio_type }} label="{{ label }}" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %} color="primary"></v-{{ radio_type }}>
{%- endblock radio_widget -%}

{%- block checkbox_widget -%}
    <v-checkbox label="{{ label }}" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %} color="primary"></v-checkbox>
{%- endblock checkbox_widget -%}

{%- block textarea_widget -%}
    {% set textarea = true %}
    {{- block('form_widget_simple') -}}
{%- endblock textarea_widget -%}

{%- block choice_widget_collapsed -%}
    {% if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
            }) %}
        {%- else -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}

    {% set type = autocomplete ? 'autocomplete' : 'select' %}
    <v-{{ type }} {{ block('widget_attributes') }}{% if multiple %} multiple{% endif %} label="{{ label }}" value="{{ value }}" @input="$refs['{{ id }}'].value = $event"
            {%- if errors|length > 0 %} error  :error-messages="[{%- for error in errors -%}'{{ error.message|e('html_attr') }}'{%- endfor -%}]" {%- endif -%}
            {% if required %}class="required"{% endif %}
        {%- set options = choices %}
        {{- block('choice_widget_options')|raw -}}
            browser-autocomplete="{{ random() }}"
    >
        </v-{{ type }}>
    <input type="hidden" name="{{ full_name }}" ref="{{ id }}" value="{{ value }}" />
{%- endblock choice_widget_collapsed -%}

{%- block choice_widget_options -%}
    {% set items = [] %}

    {%- if preferred_choices|length > 0 -%}
        {% for group_label, choice in preferred_choices %}
            {%- if choice is iterable -%}
                {% set options = choice %}

                {{- block('choice_widget_options') -}}
            {%- else -%}
                {% set items = items|merge([{"value" : choice.value, "text": choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain)}]) %}
            {%- endif -%}
        {% endfor %}
    {%- endif -%}

    {% for group_label, choice in options %}
        {%- if choice is iterable -%}
            {% set options = choice %}

            {{- block('choice_widget_options') -}}
        {%- else -%}
            {% set items = items|merge([{"value" : choice.value, "text": choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain)}]) %}
        {%- endif -%}
    {% endfor %}
    :items="{{ items|json_encode }}"
{%- endblock choice_widget_options -%}

{%- block date_widget -%}
    {%- if widget == 'single_text' -%}
        <v-menu
                :close-on-content-click="false"
                :nudge-right="40"
                lazy
                transition="scale-transition"
                offset-y
                full-width
                min-width="290px"
                ref="{{ id }}_menu"
        >
            <v-text-field
                    slot="activator"
                    ref="{{ id }}_value"
                    label="{{ label }}"
                    prepend-icon="event"
                    name="{{ full_name }}"
                    value="{{ value }}"
                    readonly
                    {% if required %}class="required"{% endif %}
                    {%- if errors|length > 0 %} error  :error-messages="[{%- for error in errors -%}'{{ error.message|e('html_attr') }}'{%- endfor -%}]" {%- endif -%}
            ></v-text-field>
            <v-date-picker type="{{ picker_type }}" value="{{ value }}" reactive  @input="$refs['{{ id }}_menu'].isActive = false; $refs['{{ id }}_value'].value = $event;"
            {%- if landscape %}landscape{% endif -%}
            ></v-date-picker>
        </v-menu>

        {#<v-date-picker type="{{ picker_type }}" value="{{ value }}" reactive @input="$refs['{{ id }}'].value = $event"
            {%- if landscape %}landscape{% endif -%}
        ></v-date-picker>#}
        {#<input type="hidden" {{ block('widget_attributes') }} ref="{{ id }}">#}
    {%- else -%}
        <div {{ block('widget_container_attributes') }}>
            {{- date_pattern|replace({
                '{{ year }}':  form_widget(form.year),
                '{{ month }}': form_widget(form.month),
                '{{ day }}':   form_widget(form.day),
            })|raw -}}
        </div>
    {%- endif -%}
{%- endblock date_widget -%}

{%- block month_widget -%}
    {%- if widget == 'single_text' -%}
        {{- block('date_widget') -}}
    {%- else -%}
        <div {{ block('widget_container_attributes') }}>
            {{- date_pattern|replace({
                '{{ year }}':  form_widget(form.year),
                '{{ month }}': form_widget(form.month)
            })|raw -}}
        </div>
    {%- endif -%}
{%- endblock month_widget -%}
